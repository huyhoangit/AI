using UnityEngine;

/// <summary>
/// Quick Test for Python AI - Add to GameObject and test
/// </summary>
public class QuickPythonAITest : MonoBehaviour
{
    void Start()
    {
        // Test ngay khi start
        Invoke("TestPythonAI", 1f);
    }
    
    void TestPythonAI()
    {
        Debug.Log("üöÄ Testing Python AI connection...");
        
        // T√¨m ho·∫∑c t·∫°o PythonLocalAI component
        PythonLocalAI pythonAI = GetComponent<PythonLocalAI>();
        if (pythonAI == null)
        {
            pythonAI = gameObject.AddComponent<PythonLocalAI>();
            Debug.Log("üîß Added PythonLocalAI component");
        }
        
        // Test v·ªõi c√¢u h·ªèi v·ªÅ Quoridor
        pythonAI.GetAIResponse("Quoridor l√† g√¨? Gi·∫£i th√≠ch ng·∫Øn g·ªçn.", OnTestResponse);
    }
    
    void OnTestResponse(string response, bool success, float confidence)
    {
        if (success)
        {
            Debug.Log("‚úÖ PYTHON AI TEST TH√ÄNH C√îNG!");
            Debug.Log($"ü§ñ AI Response: {response}");
            Debug.Log($"üìä Confidence: {confidence:F2}");
            Debug.Log("üéâ Python AI ƒë√£ s·∫µn s√†ng s·ª≠ d·ª•ng!");
            
            // Test th√™m c√¢u h·ªèi
            TestMoreQuestions();
        }
        else
        {
            Debug.LogError("‚ùå PYTHON AI TEST TH·∫§T B·∫†I!");
            Debug.LogError($"Error: {response}");
            ShowTroubleshootingTips();
        }
    }
    
    void TestMoreQuestions()
    {
        PythonLocalAI pythonAI = GetComponent<PythonLocalAI>();
        
        // Test c√¢u h·ªèi v·ªÅ chi·∫øn thu·∫≠t
        pythonAI.GetAIResponse("Chi·∫øn thu·∫≠t th·∫Øng trong Quoridor l√† g√¨?", (response, success, confidence) => {
            if (success)
            {
                Debug.Log($"üß† Strategy Response: {response}");
            }
        });
        
        // Test c√¢u h·ªèi v·ªÅ lu·∫≠t ch∆°i
        pythonAI.GetAIResponse("L√†m sao ƒë·ªÉ ƒë·∫∑t t∆∞·ªùng trong Quoridor?", (response, success, confidence) => {
            if (success)
            {
                Debug.Log($"üìã Rules Response: {response}");
            }
        });
    }
    
    void ShowTroubleshootingTips()
    {
        Debug.Log("üõ†Ô∏è TROUBLESHOOTING:");
        Debug.Log("1. Check if Python server is running at http://localhost:5000");
        Debug.Log("2. Make sure Flask is installed: py -m pip install flask");
        Debug.Log("3. Check firewall settings");
        Debug.Log("4. Verify simple_quoridor_ai.py is running");
    }
    
    [ContextMenu("Test Python AI Manual")]
    public void ManualTest()
    {
        TestPythonAI();
    }
    
    [ContextMenu("Test Server Connection")]
    public void TestConnection()
    {
        PythonLocalAI pythonAI = GetComponent<PythonLocalAI>();
        if (pythonAI == null)
        {
            pythonAI = gameObject.AddComponent<PythonLocalAI>();
        }
        
        pythonAI.CheckServer();
    }
}
